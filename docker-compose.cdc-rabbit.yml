version: '3.3'

services:
  main:
    build: 
      context: ./main/
      dockerfile: Dockerfile
    container_name: image_main
    depends_on:
      dbimg:
        condition: service_healthy
    expose:
      - 8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbimg:5432/img_dev
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - FRONTEND_URL=http://localhost:8000
  dbimg:
    image: 'postgres:13.1-alpine'
    container_name: dbimg
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=img_dev
    expose:
      - 5432
    healthcheck:
      test: ['CMD', 'psql', '-U', 'admin', 'img_dev', '-c', 'SELECT 1']
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
  frontend:
    container_name: image_frontend
    build: 
      context: ./frontend/
      dockerfile: Dockerfile
    depends_on:
      - main
    ports:
      - "8000:80"
    environment:
      - API_URL=main
      - API_PORT=8080
    command: /bin/sh -c "envsubst '$${API_URL} $${API_PORT}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: /
  debezium:
    image: debezium/server:2.4
    container_name: debezium-server
    ports:
      - 8081:8080
    volumes:
      - ./cdc/rabbit/conf:/debezium/conf:z
    depends_on:
      - rabbitmq
      - dbimg
